###################################################################################################################################
#
# Workflow Description:
#     Organize all the testing coverage reports. (it would save reports by 'actions/upload-artifact@v3').
#
# Workflow input parameters:
#     * test_os: The OS runtime environment in. If it has multiple values, please separate it by comma ','. In generally, it only has 2 options: 'macos' and 'ubuntu'.
#     * test_type: The testing type. In generally, it only has 2 options: 'unit-test' and 'integration-test'.
#
# Workflow running output:
#     No, but it would save the testing coverage reports (coverage.xml) to provide after-process to organize and record.
#
#     * Upload-Artifact:
#         * test_coverage_report: The handled test coverage report (.coverage file). It's file name format would be .coverage.<inputs.test type>.
#         * test_coverage_xml_report: The handled test coverage report (.xml file). It's file name format would be coverage_<inputs.test type>.xml.
#
###################################################################################################################################

name: Organize all testing coverage reports which be tested in many different runtime OS and Python version as a testing coverage report

on:
  workflow_call:
    inputs:
      test_type:
        description: "The testing type. In generally, it only has 2 options: 'unit-test' and 'integration-test'."
        type: string
        required: true
      test_os:
        description: "The OS runtime environment in. If it has multiple values, please separate it by comma ','. In generally, 
                      it only has 2 options: 'macos' and 'ubuntu'."
        type: string
        required: true


jobs:
  organize_and_generate_test_reports:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download code coverage result file
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: ./

      - name: Setup Python 3.10 in Ubuntu OS
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python tool 'coverage'
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -U pip
          pip3 install coverage
          pip3 install codecov
          pip3 install coveralls

      - name: Combine all testing coverage data files with test type and runtime OS, and convert to XML format file finally
        run: bash ./scripts/ci/combine_coverage_reports.sh ${{ inputs.test_type }} ${{ inputs.test_os }} true

      - name: Upload testing coverage report (.coverage)
        uses: actions/upload-artifact@v3
        with:
          name: test_coverage_data_file
          path: .coverage
          if-no-files-found: error

      - name: Upload testing coverage report (.xml)
        uses: actions/upload-artifact@v3
        with:
          name: test_coverage_xml_report
          path: coverage**xml
          if-no-files-found: error
