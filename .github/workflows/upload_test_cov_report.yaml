############################################################################
#
# Workflow Description:
#     Upload the testing coverage reports to Codecov.
#
# Workflow input parameters:
#     * General arguments:
#         * download_path: The path to download testing coverage reports via 'actions/download-artifact@v3'.
#         * test_type: The testing type. In generally, it only has 2 options: 'unit-test' and 'integration-test'.
#         * upload-to-codecov: If it's true, it would upload testing coverage report for Codecov (https://codecov.io).
#         * upload-to-coveralls: If it's true, it would upload testing coverage report for Coveralls (https://coveralls.io).
#         * upload-to-codacy: If it's true, it would upload testing coverage report for Codacy (https://app.codacy.com/).
#
#     * Secret arguments:
#         * codecov_token: The API token for uploading testing coverage report to Codecov.
#         * coveralls_token: The API token for uploading testing coverage report to Coveralls.
#         * codacy_token: The API token for uploading testing coverage report to Codacy.
#
# Workflow running output:
#     No and do nothing.
#
############################################################################

name: Upload test report to Codecov

on:
  workflow_call:
    inputs:
      download_path:
        description: "The path to download testing coverage reports via 'actions/download-artifact@v3'."
        type: string
        required: false
        default: ./
      test_type:
        description: "The testing type. In generally, it only has 2 options: 'unit-test' and 'integration-test'."
        required: true
        type: string
      upload-to-codecov:
        description: "If it's true, it would upload testing coverage report for Codecov (https://codecov.io)."
        type: boolean
        required: false
        default: false
      upload-to-coveralls:
        description: "If it's true, it would upload testing coverage report for Coveralls (https://coveralls.io)."
        type: boolean
        required: false
        default: false
      upload-to-codacy:
        description: "If it's true, it would upload testing coverage report for Codacy (https://app.codacy.com/)."
        type: boolean
        required: false
        default: false
      codecov_flags:
        description: "The flags of the testing coverage report for Codecov."
        type: string
        required: false
        default: ''
      codecov_name:
        description: "The name of the testing coverage report for Codecov."
        type: string
        required: false
        default: ''

    secrets:
      codecov_token:
        description: "The API token for uploading testing coverage report to Codecov."
        required: false
      coveralls_token:
        description: "The API token for uploading testing coverage report to Coveralls."
        required: false
      codacy_token:
        description: "The API token for uploading testing coverage report to Codacy."
        required: false


jobs:
  upload_test_cov_report:
    runs-on: ubuntu-latest
    steps:
      - name: Check the workflow input parameter
        uses: | 
          echo "Check the parameters of uploading report to Codecov ..."
          bash ./scripts/ci/check-input-params.sh ${{ inputs.upload-to-codecov }} ${{ secrets.codecov_token }}

          echo "Check the parameters of uploading report to Coveralls ..."
          bash ./scripts/ci/check-input-params.sh ${{ inputs.upload-to-coveralls }} ${{ secrets.coveralls_token }}

          echo "Check the parameters of uploading report to Codacy ..."
          bash ./scripts/ci/check-input-params.sh ${{ inputs.upload-to-codacy }} ${{ secrets.codacy_token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Download code coverage result files which has be handled by different test type process
        uses: actions/download-artifact@v3
        with:
          name: test_coverage_report
          path: ${{ inputs.download_path }}

      - name: Download code coverage result files which has be handled by different test type process
        uses: actions/download-artifact@v3
        with:
          name: test_coverage_xml_report
          path: ${{ inputs.download_path }}

      - name: Install Python 3.10
        if: ${{ inputs.upload-to-codecov == true || inputs.upload-to-coveralls == true }}
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Python dependencies about handling testing coverage report
        if: ${{ inputs.upload-to-codecov == true || inputs.upload-to-coveralls == true }}
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -U pip

      - name: Install Python dependencies about tool of Codecov
        if: ${{ inputs.upload-to-codecov == true }}
        run: pip3 install codecov

      - name: Upload coverage report to Codecov https://codecov.io (For Unit-Test or Integration-Test)
        if: ${{ inputs.upload-to-codecov == true && (inputs.test_type == 'unit-test' || inputs.test_type == 'integration-test') }}
        run: |
          codecov \
            -t ${{ secrets.codecov_token }} \
            --file coverage_${{ inputs.test_type }}.xml \
            --flags ${{ inputs.codecov_flags }} \
            --env OS,PYTHON \
            --name ${{ inputs.codecov_name }} \
            --verbose

      - name: Upload coverage report to Codecov https://codecov.io (For all test types)
        if: ${{ inputs.upload-to-codecov == true && inputs.test_type == 'all-test' }}
        run: |
          codecov \
            -t ${{ secrets.codecov_token }} \
            --file coverage_unit-test.xml \
            --file coverage_integration-test.xml \
            --flags ${{ inputs.codecov_flags }} \
            --env OS,PYTHON \
            --name ${{ inputs.codecov_name }} \
            --verbose

      - name: Install Python dependencies about tool of Coveralls
        if: ${{ inputs.upload-to-coveralls == true }}
        run: |
          pip3 install coveralls
          pip3 install coverage

      - name: Combine all testing code coverage result files with all test types
        if: ${{ inputs.upload-to-coveralls == true }}
        run: coverage combine .coverage.*

      - name: Upload coverage report to Coveralls https://coveralls.io
        if: ${{ inputs.upload-to-coveralls == true }}
        env:
          GITHUB_TOKEN: ${{ secrets.coveralls_token }}
        run: coveralls --verbose

      - name: Upload testing report to Codacy https://app.codacy.com/ (For Unit-Test or Integration-Test)
        if: ${{ inputs.upload-to-codacy == true && (inputs.test_type == 'unit-test' || inputs.test_type == 'integration-test') }}
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: coverage_${{ inputs.test_type }}.xml
          coverage-reports: coverage_unit-test.xml
#          coverage-reports: cobertura.xml

      - name: Upload testing report to Codacy https://app.codacy.com/ (For all test types)
        if: ${{ inputs.upload-to-codacy == true && inputs.test_type == 'all-test' }}
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.codacy_token }}
          coverage-reports: coverage_unit-test.xml,coverage_integration-test.xml
#          coverage-reports: cobertura.xml
