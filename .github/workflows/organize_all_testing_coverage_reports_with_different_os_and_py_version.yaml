############################################################################
#
# Workflow Description:
#     Organize all the testing coverage reports. (it would save reports by 'actions/upload-artifact@v3').
#
# Workflow input parameters:
#     * test_type: The testing type. In generally, it only has 2 options: 'unit-test' and 'integration-test'.
#     * generate_xml_report_finally: Something, it only has 1 test type currently. So it could let this option
#        to be 'true' than it would generate XML report finally to let uploading process to use it directly.
#
# Workflow running output:
#     No, but it would save the testing coverage reports (coverage.xml) to provide after-process to organize and record.
#
############################################################################

name: Organize testing coverage reports as a testing coverage report

on:
  workflow_call:
    inputs:
      test_type:
        description: "The testing type. In generally, it only has 2 options: 'unit-test' and 'integration-test'."
        required: true
        type: string
      generate_xml_report_finally:
        description: "Something, it only has 1 test type currently. So it could let this option to be 'true' than it would generate XML report finally to let uploading process to use it directly."
        type: boolean
        required: false
        default: false


jobs:
  organize_test_reports:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download code coverage result file
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: .coverage.${{ inputs.test_type }}*

      - name: Setup Python 3.10 in Ubuntu OS
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install Python tool 'coverage'
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -U pip
          pip3 install coverage

      - name: Combine all code coverage result files
        run: coverage combine .coverage.*

      - name: Report testing coverage of project code
        run: coverage report -m

      - name: Upload testing coverage report
        uses: actions/upload-artifact@v3
        with:
          name: project_testing_coverage_report_with_test_type
          path: .coverage
          if-no-files-found: error

  generate_final_test_report:
    if: ${{ inputs.generate_xml_report_finally == true }}
#    if: inputs.generate_xml_report_finally == 'true'
    needs: organize_test_reports
    runs-on: ubuntu-latest
    steps:
      - name: Download code coverage result file
        uses: actions/download-artifact@v3
        with:
          name: project_testing_coverage_report_with_test_type
          path: .coverage

      - name: General testing coverage report as XML format
        run: coverage xml

      - name: Upload testing coverage report
        uses: actions/upload-artifact@v3
        with:
          name: final_project_testing_coverage_report
          path: coverage.xml
          if-no-files-found: error

  generate_test_type_report:
    if: ${{ inputs.generate_xml_report_finally == false }}
#    if: inputs.generate_xml_report_finally == 'false'
    needs: organize_test_reports
    runs-on: ubuntu-latest
    steps:
      - name: Download code coverage result file
        uses: actions/download-artifact@v3
        with:
          name: project_testing_coverage_report_with_test_type
          path: .coverage

      - name: Rename the testing coverage report with test type
        run: mv .coverage .coverage-${{ inputs.test_type }}

      - name: Upload testing coverage report
        uses: actions/upload-artifact@v3
        with:
          name: project_testing_coverage_report
          path: .coverage-${{ inputs.test_type }}
          if-no-files-found: error
