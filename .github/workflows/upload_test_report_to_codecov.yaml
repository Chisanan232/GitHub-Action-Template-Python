############################################################################
#
# Workflow Description:
#     Upload the testing coverage reports to Codecov.
#
# Workflow input parameters:
#     * General arguments:
#         * download_path: The path to download testing coverage reports via 'actions/download-artifact@v3'.
#         * codecov_flags: The flags of the testing coverage report for Codecov.
#         * codecov_name: The name of the testing coverage report for Codecov.
#
#     * Secret arguments:
#         * codecov_token: The API token for uploading testing coverage report to Codecov.
#
# Workflow running output:
#     No and do nothing.
#
############################################################################

name: Upload test report to Codecov

on:
  workflow_call:
    inputs:
      download_path:
        description: "The path to download testing coverage reports via 'actions/download-artifact@v3'."
        type: string
        required: true
      test_type:
        description: "The testing type. In generally, it only has 2 options: 'unit-test' and 'integration-test'."
        type: string
        required: true
      use_codecov:
        description: "The flags of the testing coverage report for Codecov."
        type: boolean
        required: false
        default: false
      use_coveralls:
        description: "The flags of the testing coverage report for Codecov."
        type: boolean
        required: false
        default: false
      codecov_flags:
        description: "The flags of the testing coverage report for Codecov."
        type: string
        required: false
        default: ''
      codecov_name:
        description: "The name of the testing coverage report for Codecov."
        type: string
        required: false
        default: ''
      coveralls_flag:
        description: "The name of the testing coverage report for Codecov."
        type: string
        required: false
        default: ''

    secrets:
      codecov_token:
        description: "The API token for uploading testing coverage report to Codecov."
        required: false
      coveralls_token:
        description: "The API token for uploading testing coverage report to Coveralls."
        required: false


jobs:
  upload_report_to_codecov:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Download code coverage result file
#        uses: actions/download-artifact@v3
#        with:
#          name: coverage
#          path: ./

      - name: Download code coverage result file
        uses: actions/download-artifact@v3
        with:
          name: final_project_testing_coverage_report
#          name: final_project_testing_coverage_xml_report
          path: ${{ inputs.download_path }}

      - name: Install Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -U pip
          pip3 install codecov
          pip3 install coverage
          pip3 install coveralls

#      - name: Combine all testing code coverage result files with all test types
#        run: coverage combine --data-file=.coverage.${{ inputs.test_type }} .coverage.*
#
#      - name: Report testing coverage of project code
#        run: coverage report -m --data-file=.coverage.${{ inputs.test_type }}
#
#      - name: General testing coverage report as XML format with ${{ inputs.test_type }}
#        run: coverage xml --data-file=.coverage.${{ inputs.test_type }} -o coverage_${{ inputs.test_type }}.xml
#
#      - name: Report testing coverage of project code
#        run: coverage report -m --data-file=.coverage.${{ inputs.test_type }}

## Second usage
      - name: Combine all testing code coverage result files with all test types
        run: coverage combine .coverage.*

      - name: Report testing coverage of project code
        run: coverage report -m

#      - name: General testing coverage report as XML format with ${{ inputs.test_type }}
#        run: coverage xml
#
#      - name: Report testing coverage of project code
#        run: coverage report -m

#      - name: Upload coverage report to platform Codecov
#        if: ${{ inputs.use_codecov == true && inputs.test_type != 'all-test' }}
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.codecov_token }} # not required for public repos
##          files: coverage.xml # optional
#          files: ./coverage_${{ inputs.test_type }}.xml # optional
#          flags: ${{ inputs.codecov_flags }} # optional
#          env_vars: OS,PYTHON
#          name: ${{ inputs.codecov_name }} # optional
#          fail_ci_if_error: true # optional (default = false)
#          verbose: true # optional (default = false)

      - name: Upload coverage report to platform Codecov
        if: ${{ inputs.use_codecov == true && inputs.test_type == 'all-test' }}
#        run: bash <(curl -s https://codecov.io/bash)
#        run: codecov -t ${{ secrets.codecov_token }}
#        run: |
#          codecov -t ${{ secrets.codecov_token }} \
#                      --file ./coverage_integration-test.xml \
##                      --flags ${{ inputs.codecov_flags }} \
##                      --env OS,PYTHON \
##                      --name ${{ inputs.codecov_name }} \
##                      --branch github.ref_name
        uses: codecov/codecov-action@v2
        with:
          file: .coverage
#          token: ${{ secrets.codecov_token }} # not required for public repos
##          files:  ./coverage_unit-test.xml,./coverage_integration-test.xml
##          files:  ./.coverage.unit-test,./.coverage.integration-test # optional
#          files:  ./coverage.xml
##          flags: ${{ inputs.codecov_flags }} # optional
##          env_vars: OS,PYTHON # optional
##          name: ${{ inputs.codecov_name }} # optional
#          fail_ci_if_error: true # optional (default = false)
#          verbose: true # optional (default = false)

#      - name: Test the coverage report
#        if: ${{ inputs.use_coveralls == true && inputs.test_type == 'all-test' }}
#        run: |
#          pip3 install coverage-lcov
#          coverage-lcov --data_file_path ./.coverage.${{ inputs.test_type }} --output_file_path lcov.info

      - name: Upload coverage report to platform Coveralls
        if: ${{ inputs.use_coveralls == true && inputs.test_type == 'all-test' }}
        env:
          GITHUB_TOKEN: ${{ secrets.coveralls_token }}
        run: coveralls --verbose
#        uses: coverallsapp/github-action@master
#        with:
#          github-token: ${{ secrets.coveralls_token }}
#          path-to-lcov: ./lcov.info
#          flag-name: ${{ secrets.coveralls_flag }}
